import 'package:flutter/material.dart';

void main() {
  runApp(CalculatorApp());
}

class CalculatorApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Calculator',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: CalculatorScreen(),
    );
  }
}

class CalculatorScreen extends StatefulWidget {
  @override
  _CalculatorScreenState createState() => _CalculatorScreenState();
}

class _CalculatorScreenState extends State<CalculatorScreen> {
  String output = "0";
  String _output = "0";
  double num1 = 0.0;
  double num2 = 0.0;
  String operand = "";

  buttonPressed(String buttonText) {
    if (buttonText == "C") {
      _output = "0";
      num1 = 0.0;
      num2 = 0.0;
      operand = "";
    } else if (buttonText == "+" || buttonText == "-" || buttonText == "×" || buttonText == "÷") {
      num1 = double.parse(output);
      operand = buttonText;
      _output = "0";
    } else if (buttonText == ".") {
      if (_output.contains(".")) {
        return;
      } else {
        _output += buttonText;
      }
    } else if (buttonText == "%") {
      num1 = double.parse(output);
      _output = (num1 / 100).toString();
    } else if (buttonText == "±") {
      num1 = double.parse(output);
      _output = (-num1).toString();
    } else if (buttonText == "=") {
      num2 = double.parse(output);
      if (operand == "+") {
        _output = (num1 + num2).toString();
      }
      if (operand == "-") {
        _output = (num1 - num2).toString();
      }
      if (operand == "×") {
        _output = (num1 * num2).toString();
      }
      if (operand == "÷") {
        if (num2 != 0) {
          _output = (num1 / num2).toString();
        } else {
          _output = "Error";
        }
      }
      num1 = 0.0;
      num2 = 0.0;
      operand = "";
    } else {
      _output += buttonText;
    }

    setState(() {
      if (buttonText == "C" || buttonText == "=" || buttonText == "%" || buttonText == "±") {
        output = double.parse(_output).toStringAsFixed(2);
      } else {
        output = _output;
      }
    });
  }

  Widget buildButton(String buttonText, Color buttonColor, Color textColor) {
    return Expanded(
      child: Padding(
        padding: EdgeInsets.all(2.0),
        child: OutlinedButton(
          onPressed: () => buttonPressed(buttonText),
          style: ButtonStyle(
            backgroundColor: MaterialStateProperty.all<Color>(buttonColor),
            foregroundColor: MaterialStateProperty.all<Color>(textColor),
          ),
          child: Text(
            buttonText,
            style: TextStyle(fontSize: 24.0),
          ),
        ),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Calculator'),
      ),
      body: Column(
        children: <Widget>[
          Container(
            alignment: Alignment.centerRight,
            padding: EdgeInsets.symmetric(vertical: 24.0, horizontal: 12.0),
            child: Text(
              output,
              style: TextStyle(fontSize: 48.0, fontWeight: FontWeight.bold),
            ),
          ),
          Expanded(
            child: Divider(),
          ),
          Column(
            children: [
              Row(
                children: [
                  buildButton("C", Colors.grey, Colors.black),
                  buildButton("±", Colors.grey, Colors.black),
                  buildButton("%", Colors.grey, Colors.black),
                  buildButton("÷", Colors.orange, Colors.white),
                ],
              ),
              Row(
                children: [
                  buildButton("7", Colors.grey[300], Colors.black),
                  buildButton("8", Colors.grey[300], Colors.black),
                  buildButton("9", Colors.grey[300], Colors.black),
                  buildButton("×", Colors.orange, Colors.white),
                ],
              ),
              Row(
                children: [
                  buildButton("4", Colors.grey[300], Colors.black),
                  buildButton("5", Colors.grey[300], Colors.black),
                  buildButton("6", Colors.grey[300], Colors.black),
                  buildButton("-", Colors.orange, Colors.white),
                ],
              ),
              Row(
                children: [
                  buildButton("1", Colors.grey[300], Colors.black),
                  buildButton("2", Colors.grey[300], Colors.black),
                  buildButton("3", Colors.grey[300], Colors.black),
                  buildButton("+", Colors.orange, Colors.white),
                ],
              ),
              Row(
                children: [
                  buildButton("0", Colors.grey[300], Colors.black),
                  buildButton(".", Colors.grey[300], Colors.black),
                  buildButton("=", Colors.orange, Colors.white),
                ],
              ),
            ],
          )
        ],
      ),
    );
  }
}
